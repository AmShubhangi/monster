{"ast":null,"code":"import _classCallCheck from\"/home/codecrunch/Documents/monster-filter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/codecrunch/Documents/monster-filter/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/codecrunch/Documents/monster-filter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/codecrunch/Documents/monster-filter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/home/codecrunch/Documents/monster-filter/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/codecrunch/Documents/monster-filter/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import Axios from'axios';import{CardList}from'./card-list/card-list.component';import'./App.css';import{SearchBox}from'./search-box/search-box.component';var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);function App(){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this));_this.state={monsters:[],searchField:''};_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;Axios.get('https://jsonplaceholder.typicode.com/users').then(function(data){_this2.setState({monsters:data.data});});}},{key:\"handleChange\",value:function handleChange(e){this.setState({searchField:e.target.value});}},{key:\"render\",value:function render(){var _this$state=this.state,monsters=_this$state.monsters,searchField=_this$state.searchField;var filteredMonsters=monsters.filter(function(monster){return monster.name.toLowerCase().includes(searchField.toLowerCase());});return React.createElement(\"div\",{className:\"App\"},React.createElement(\"h1\",{className:\"heading\"},\"Monsters of India\"),React.createElement(SearchBox,{placeholder:\"Search  Monsters\",handleChange:this.handleChange}),React.createElement(CardList,{monsters:filteredMonsters}));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/home/codecrunch/Documents/monster-filter/src/App.js"],"names":["React","Axios","CardList","SearchBox","App","state","monsters","searchField","handleChange","bind","get","then","data","setState","e","target","value","filteredMonsters","filter","monster","name","toLowerCase","includes","Component"],"mappings":"swBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,iCAAzB,CACA,MAAO,WAAP,CACA,OAASC,SAAT,KAA0B,mCAA1B,C,GAEMC,CAAAA,G,yEACJ,cAAc,qCACZ,uEACA,MAAKC,KAAL,CAAa,CACXC,QAAQ,CAAE,EADC,CAEXC,WAAW,CAAE,EAFF,CAAb,CAIA,MAAKC,YAAL,CAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB,CANY,aAOb,C,6EAEmB,iBAClBR,KAAK,CAACS,GAAN,CAAU,4CAAV,EAAwDC,IAAxD,CAA6D,SAAAC,IAAI,CAAI,CACnE,MAAI,CAACC,QAAL,CAAc,CAAEP,QAAQ,CAAEM,IAAI,CAACA,IAAjB,CAAd,EACD,CAFD,EAGD,C,kDAEYE,C,CAAG,CACd,KAAKD,QAAL,CAAc,CAAEN,WAAW,CAAEO,CAAC,CAACC,MAAF,CAASC,KAAxB,CAAd,EACD,C,uCAEQ,iBAC2B,KAAKX,KADhC,CACCC,QADD,aACCA,QADD,CACWC,WADX,aACWA,WADX,CAGP,GAAMU,CAAAA,gBAAgB,CAAGX,QAAQ,CAACY,MAAT,CAAgB,SAAAC,OAAO,QAC9CA,CAAAA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCf,WAAW,CAACc,WAAZ,EAApC,CAD8C,EAAvB,CAAzB,CAGA,MACE,4BAAK,SAAS,CAAC,KAAf,EACE,0BAAI,SAAS,CAAC,SAAd,sBADF,CAGE,oBAAC,SAAD,EAAW,WAAW,CAAC,kBAAvB,CAA0C,YAAY,CAAE,KAAKb,YAA7D,EAHF,CAME,oBAAC,QAAD,EAAU,QAAQ,CAAES,gBAApB,EANF,CADF,CAgBD,C,iBA1CejB,KAAK,CAACuB,S,EA6CxB,cAAenB,CAAAA,GAAf","sourcesContent":["import React from 'react';\nimport Axios from 'axios';\nimport { CardList } from './card-list/card-list.component';\nimport './App.css';\nimport { SearchBox } from './search-box/search-box.component';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    Axios.get('https://jsonplaceholder.typicode.com/users').then(data => {\n      this.setState({ monsters: data.data })\n    })\n  }\n\n  handleChange(e) {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase()))\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"heading\">Monsters of India</h1>\n\n        <SearchBox placeholder=\"Search  Monsters\" handleChange={this.handleChange} />\n\n        {/* // Method 2 */}\n        <CardList monsters={filteredMonsters} />\n        {/*  Method 1 */}\n        {/* {\n            this.state.monsters.map(monsters => {\n              return (<h2 key={monsters.id}>{monsters.name}</h2>)\n            })\n          } */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}